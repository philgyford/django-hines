// GALLERY

// We're using CSS Grid layout which doesn't work in IE 10, 11 and older Edge.
// So we also have a layout that uses Flexbox for those browsers.
//
// What we do:
// 1. Styles for ALL browsers
// 2. Styles for browsers that DON'T support CSS Grid layouts:
// 3. Styles for browsers that DO support CSS Grid layouts:
// 4. All other styles for all browsers.
//
// When there comes a time we can ditch the Flexbox layout we should be able
// to delete parts 2 and 3a.


// 1. Styles for ALL browsers.
.gallery {
  @include list-unstyled;
  margin-bottom: 0;

  .gallery__item {
    // So we can re-order the contents of each item.
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
}


// 2. Styles for browsers that DON'T support CSS Grid layouts:
.gallery {
  display: flex;
  flex-wrap: wrap;

  .gallery__item {
    width: 100%;
    padding: 0 ($border-width * 2) $paragraph-margin-bottom ($border-width * 2);

    @include media-breakpoint-up(sm) {
      width: 50%;
      max-width: 50%;
    }
  }
}
.gallery--3 .gallery__item {
  @include media-breakpoint-up(lg) {
    width: 33.3333%;
    max-width: 33.3333%;
  }
}
.gallery--4 .gallery__item {
  @include media-breakpoint-up(lg) {
    width: 25%;
    max-width: 25%;
  }
}


// 3. Styles for browsers that DO support CSS Grid layouts:
@supports (display: grid) {

  // 3a. Undo the non-Grid styles:

  .gallery {
    flex-wrap: nowrap;

    .gallery__item {
      width: auto;
      padding: 0;

      @include media-breakpoint-up(sm) {
        width: auto;
        max-width: none;
      }

      @include media-breakpoint-up(lg) {
        width: auto;
        max-width: none;
      }
    }
  }
  .gallery--3 .gallery__item {
    @include media-breakpoint-up(lg) {
      width: auto;
      max-width: none;
    }
  }
  .gallery--4 .gallery__item {
    @include media-breakpoint-up(lg) {
      width: auto;
      max-width: none;
    }
  }

  // 3b. Apply the Grid styles:

  .gallery {
    // Apply Grid styles:
    display: grid;
    grid-row-gap: $paragraph-margin-bottom;

    @include media-breakpoint-up(sm) {
      grid-template-columns: 47% 47%;
      grid-column-gap: 6%;
    }
  }

  // 3 columns at wider widths.
  .gallery--3 {
    @include media-breakpoint-up(lg) {
      grid-template-columns: 30% 30% 30%;
      grid-column-gap: 5%;
    }
  }

  // 4 columns at wider widths.
  .gallery--4 {
    @include media-breakpoint-up(lg) {
      -ms-grid-columns: 22% 22% 22% 22%;
      grid-template-columns: 22% 22% 22% 22%;
      grid-column-gap: 4%;
    }
  }
}


// 4. All other styles for all browsers.

.gallery__item__header {
  font-size: $nav-font-size;
  line-height: $line-height-sm;
  margin-bottom: 0;
  order: 2;
}

.gallery__item__img {
  order: 1;
  margin-bottom: ($border-width / 2);

  img {
    max-width: 100%;
    height: auto;
  }

  @include media-breakpoint-up(sm) {
    // Once we start showing more than one column...
    // Centering the image within our fixed-height div:
    display: flex;
    align-items: flex-end;
    justify-content: center;
  }
}

.gallery__item .meta {
  order: 3;
}


// Gallery Flow.

// Variations for the Albums gallery, currently only in sidebar in .card.
// All imageas are 150x150 so we collapse things vertically and stop centering
// the images.

// We could use this for things other than Albums, but would have to think how
// to deal with images that aren't 150x150.

// In general usage, each item is 150px wide, so that they all go into
// equal-sized columns, and split into as many rows as needed. Neat.

// First undo the CSS Grid layout styles.
@supports (display: grid) {
  .gallery--flow{
    display: flex;
    flex-wrap: wrap;
  }
}

.gallery--flow {

  .gallery__item {
    width: 150px;
    max-width: 150px;
    padding: 0 0 $paragraph-margin-bottom 0;
    margin-right: $border-width;
  }

  .gallery__item__img {
    height: 150px;
    justify-content: flex-start;
  }
}

// But if this album gallery is within .grid__col--sub, and the browser is wide
// enough for that column to be a sidebar (rather than full browser width)
// then the items will all be in a single maximum-width column.
@include media-breakpoint-up(md) {
  .grid__col--sub {

    .gallery--flow {
      .gallery__item {
        width: 100%;
        max-width: 100%;
        margin-right: 0;
      }
    }
  }
}
