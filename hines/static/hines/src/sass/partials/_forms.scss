// Form controls.
// Based on Bootstrap v4.
// Some things we don't need removed.

label {
  @include text-style-nav;
  margin-bottom: $vertical-space-sm;
  display: block;
}

.form__control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Otherwise undo the iOS default
  border-radius: 0;

  box-shadow: $input-box-shadow;
  transition: $input-transition;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form__control {
  &:not([size]):not([multiple]) {
    height: $input-height;
  }

  font-family: $font-family-sans-serif;

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form__control--file,
.form__control--range {
  display: block;
}

// For use with horizontal and inline forms, when you need the label text to
// align with the form controls.
//.form__col__label {
  //padding-top: calc(#{$input-padding-y} + #{$input-border-width});
  //padding-bottom: calc(#{$input-padding-y} + #{$input-border-width});
  //margin-bottom: 0; // Override the `<label>` default
  //// Compensate for labels having the smaller nav-font-size:
  //line-height: ($font-size-base / $nav-font-size) * $input-line-height;
//}


// Form control sizing
//
// Build on `.form__control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form__group--* form__control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.form__control--sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  line-height: $input-line-height-sm;
  font-size: $font-size-sm;
  height: $input-height-sm;
}

select.form__control--sm {
  &:not([size]):not([multiple]) {
    height: $input-height-sm;
  }
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form__group {
  margin-bottom: $form-group-margin-bottom;
}

// e.g.
// <input aria-described-by="my-text" class="form_control" type="text" name="foo">
// <p class="form__text" id="my-text">Some help text.</p>
.form__text {
  margin-top: $form-text-margin-top;

  @include text-style-alt;
}

.form__text--invalid {
  color: $form-feedback-invalid-color;
}


// Form validation

// We're only using the invalid color, so replacing the call to the Bootstrap
// mixin with the bits of its output that we need for that:


.form__control {
  .was-validated &:invalid,
  &.is-invalid {
    border-color: $form-feedback-invalid-color;

    &:focus {
      border-color: $form-feedback-invalid-color;
    }

    ~ .form__feedback--invalid,
    ~ .form__tooltip--invalid {
      display: block;
    }
  }
}


// Inline forms
//
// Make forms appear inline(-block) by adding the `.form--inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).

.form--inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)

  label,
  .form__control,
  .button {
    margin-bottom: $form-group-margin-bottom;
  }

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
      margin-right: ($base-unit * 2);
    }

    .form__control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
      margin-right: ($base-unit * 2);
      margin-bottom: $vertical-space-sm;

      &:last-child {
        margin-right: 0;
      }
    }

    // Make static controls behave like regular ones
    .form__control--plaintext {
      display: inline-block;
    }

    .button {
      margin-bottom: $vertical-space-sm;
    }
  }
}

.form__buttons .button {
  // Give the buttons some space if they wrap onto more than one line.
  margin-bottom: $vertical-space-sm;
}
