name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel

    - name: Cache pipenv dependencies
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install Dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install --deploy --dev

    - name: Set up database
      run: |
        pipenv run ./manage.py collectstatic --settings=config.settings.tests --verbosity=0 --noinput
        psql -c 'CREATE DATABASE test_db;' -U postgres
        pipenv run ./manage.py migrate --settings=config.settings.tests --verbosity=0

    - name: Run Tests
      run: |
        pipenv run ./manage.py test --settings=config.settings.tests
      env:
        TEST_DB_HOST: localhost
        TEST_DB_NAME: postgres
        TEST_DB_PASS: postgres
        TEST_DB_PORT: 5432
        TEST_DB_USER: postgres
          
    - name: Run Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
