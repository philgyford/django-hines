name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports: ['5432:5432']
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel

    - name: Cache pipenv virtualenv
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-v2-

    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      env:
        PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        PIPENV_NOSPIN: 'true'
        WORKON_HOME: ~/.pipenv/virtualenvs
      run: pipenv install --dev

    - name: Run Tests
      run: |
        pipenv run ./manage.py collectstatic --verbosity=0 --noinput
        pipenv run python manage.py migrate --verbosity=0 --noinput
        pipenv run coverage run --branch --source=. --omit=*/migrations/*.py,manage.py,tests/*.py ./manage.py test
        # Used to make the lcov report in next step:
        pipenv run coverage xml -o coverage.xml
      env:
        ALLOWED_HOSTS: '*'
        DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        DJANGO_SECRET_KEY: 'fake-secret-key-for-tests'
        DJANGO_SETTINGS_MODULE: config.settings.tests
        PIPENV_NOSPIN: 'true'
        WORKON_HOME: ~/.pipenv/virtualenvs

    - name: Generate lcov report
      # We need an lcov report for Coveralls
      uses: danielpalme/ReportGenerator-GitHub-Action@4.6.4
      with:
        reports: coverage.xml
        targetdir: lcov/
        reporttypes: lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov/lcov.info
