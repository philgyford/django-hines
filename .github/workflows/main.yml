name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports: ["5432:5432"]
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pipenv and coveralls
        run: |
          python -m pip install --upgrade pip
          # We can remove "coverage<6.0" at some point when coveralls works with 6.0+
          python -m pip install --upgrade pipenv "coverage<6.0" coveralls

      - name: Cache pipenv virtualenv
        uses: actions/cache@v2
        id: pipenv-cache
        with:
          path: ~/.pipenv
          key: ${{ runner.os }}-pipenv-v7-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-v7-

      - name: Install dependencies
        env:
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        run: pipenv install --dev

      - name: Run Tests
        # Shouldn't need to manually migrate, but otherwise the tests that use AdminSite() fail:
        run: |
          pipenv run ./manage.py collectstatic --verbosity=0 --noinput
          pipenv run ./manage.py migrate --verbosity=0 --noinput
          pipenv run flake8 hines
          pipenv run coverage run ./manage.py test
          pipenv run coverage report -m
        env:
          ALLOWED_HOSTS: "*"
          DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres"
          DJANGO_SECRET_KEY: "fake-secret-key-for-tests"
          DJANGO_SETTINGS_MODULE: config.settings.tests
          WORKON_HOME: ~/.pipenv/virtualenvs

      - name: Run coveralls
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          # fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
          fields: repo,message,commit,author,action,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTIONS_CI_SLACK_HOOK }} # required
        # Run even if job fails/cancelled, but only if Slack webhook is present (it's not when Dependabot runs):
        if: ${{ always() && env.SLACK_WEBHOOK_URL != null }}
